; generated by baz

section .data
align 4

section .bss
align 4
stk resd 1024
stk.end:

section .text
align 4
bits 64
global _start
_start:
mov rsp,stk.end
mov rbp,rsp
jmp main

main:
;  [8:5] var a=1 
;  a: qword[rbp-8]
;  [8:9] a=1 
;  [8:11] 1 
;  [8:11] a=1 
   mov qword[rbp-8],1
;  [9:5] var b=a<<1 
;  b: qword[rbp-16]
;  [9:9] b=a<<1 
;  [9:11] a<<1 
;  [9:11] b=a
;  alloc r15
   mov r15,qword[rbp-8]
   mov qword[rbp-16],r15
;  free r15
;  [9:14] b<1 
   sal qword[rbp-16],1
   if_10_8:
;  [10:8] ? not b=2 
   cmp_10_8:
   cmp qword[rbp-16],2
   je if_10_5_end
   if_10_8_code:  ; opt1
;    [10:16] exit(1)
;    exit(v:reg_rdi) 
;      inline: 10_16
;      alloc rdi
;      alias v -> rdi
       mov rdi,1
;      [2:5] mov(rax,60)
       mov rax,60
;      [2:17] # exit system call 
;      [3:5] mov(rdi,v)
;      [3:17] # return code 
;      [4:5] syscall 
       syscall
;      free rdi
     exit_10_16_end:
   if_10_5_end:
;  [12:5] b=b>>1 
;  [12:7] b>>1 
;  [12:7] b=b
;  [12:10] b>1 
   sar qword[rbp-16],1
   if_13_8:
;  [13:8] ? not b=1 
   cmp_13_8:
   cmp qword[rbp-16],1
   je if_13_5_end
   if_13_8_code:  ; opt1
;    [13:16] exit(2)
;    exit(v:reg_rdi) 
;      inline: 13_16
;      alloc rdi
;      alias v -> rdi
       mov rdi,2
;      [2:5] mov(rax,60)
       mov rax,60
;      [2:17] # exit system call 
;      [3:5] mov(rdi,v)
;      [3:17] # return code 
;      [4:5] syscall 
       syscall
;      free rdi
     exit_13_16_end:
   if_13_5_end:
;  [15:5] var c=2 
;  c: qword[rbp-24]
;  [15:9] c=2 
;  [15:11] 2 
;  [15:11] c=2 
   mov qword[rbp-24],2
;  [16:5] var d=a<<c 
;  d: qword[rbp-32]
;  [16:9] d=a<<c 
;  [16:11] a<<c 
;  [16:11] d=a
;  alloc r15
   mov r15,qword[rbp-8]
   mov qword[rbp-32],r15
;  free r15
;  [16:14] d<c 
;  alloc rcx
   mov rcx,qword[rbp-24]
   sal qword[rbp-32],cl
;  free rcx
   if_17_8:
;  [17:8] ? not d=4 
   cmp_17_8:
   cmp qword[rbp-32],4
   je if_17_5_end
   if_17_8_code:  ; opt1
;    [17:16] exit(3)
;    exit(v:reg_rdi) 
;      inline: 17_16
;      alloc rdi
;      alias v -> rdi
       mov rdi,3
;      [2:5] mov(rax,60)
       mov rax,60
;      [2:17] # exit system call 
;      [3:5] mov(rdi,v)
;      [3:17] # return code 
;      [4:5] syscall 
       syscall
;      free rdi
     exit_17_16_end:
   if_17_5_end:
;  [19:5] var e=d>>c 
;  e: qword[rbp-40]
;  [19:9] e=d>>c 
;  [19:11] d>>c 
;  [19:11] e=d
;  alloc r15
   mov r15,qword[rbp-32]
   mov qword[rbp-40],r15
;  free r15
;  [19:14] e>c 
;  alloc rcx
   mov rcx,qword[rbp-24]
   sar qword[rbp-40],cl
;  free rcx
   if_20_8:
;  [20:8] ? not e=1 
   cmp_20_8:
   cmp qword[rbp-40],1
   je if_20_5_end
   if_20_8_code:  ; opt1
;    [20:16] exit(3)
;    exit(v:reg_rdi) 
;      inline: 20_16
;      alloc rdi
;      alias v -> rdi
       mov rdi,3
;      [2:5] mov(rax,60)
       mov rax,60
;      [2:17] # exit system call 
;      [3:5] mov(rdi,v)
;      [3:17] # return code 
;      [4:5] syscall 
       syscall
;      free rdi
     exit_20_16_end:
   if_20_5_end:
;  [22:5] exit(0)
;  exit(v:reg_rdi) 
;    inline: 22_5
;    alloc rdi
;    alias v -> rdi
     mov rdi,0
;    [2:5] mov(rax,60)
     mov rax,60
;    [2:17] # exit system call 
;    [3:5] mov(rdi,v)
;    [3:17] # return code 
;    [4:5] syscall 
     syscall
;    free rdi
   exit_22_5_end:

; max scratch registers in use: 1
;            max frames in use: 5

