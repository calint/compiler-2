; generated by baz

section .data
;[15:1] field hello="hello world\n" 
hello db 'hello world',10,''
hello.len equ $-hello
;[16:1] field one="one\n" 
one db 'one',10,''
one.len equ $-one
;[17:1] field num=4 
num dd 4

section .bss
stk resd 256
stk.end:

section .text
bits 32
align 4
global _start
_start:
mov ebp,stk
mov esp,stk.end
;  [20:5] print(hello.len,hello)
;    [8:5] mov(ecx,ptr)
     mov ecx,hello
;    [9:5] mov(edx,len)
     mov edx,hello.len
;    [10:5] mov(ebx,1)
     mov ebx,1
;    [11:5] mov(eax,4)
     mov eax,4
;    [12:5] int(0x80)
     int 0x80
   print_20_5_end:
;  [21:5] var a=1 
;  [21:9] a=1 
;  [21:11] 1 
;  [21:11] a=1 
   mov dword[ebp+0],1
;  [22:5] var b=2 
;  [22:9] b=2 
;  [22:11] 2 
;  [22:11] b=2 
   mov dword[ebp+4],2
;  [23:5] var c=3 
;  [23:9] c=3 
;  [23:11] 3 
;  [23:11] c=3 
   mov dword[ebp+8],3
;  [24:5] var d=4 
;  [24:9] d=4 
;  [24:11] 4 
;  [24:11] d=4 
   mov dword[ebp+12],4
;  [25:5] var n=10 
;  [25:9] n=10 
;  [25:11] 10 
;  [25:11] n=10 
   mov dword[ebp+16],10
;  [26:5] loop
   loop_26_5:
     if_27_10:
;    [27:10] ? num=0 
;    [27:10] ? num=0 
     cmp_27_10:
     cmp dword[num],0
     jne if_27_7_end
     if_27_10_code:  ; opt1
;      [27:16] break 
       jmp loop_26_5_end
     if_27_7_end:
;    [28:7] print(num,one)
;      [8:5] mov(ecx,ptr)
       mov ecx,one
;      [9:5] mov(edx,len)
       mov edx,dword[num]
;      [10:5] mov(ebx,1)
       mov ebx,1
;      [11:5] mov(eax,4)
       mov eax,4
;      [12:5] int(0x80)
       int 0x80
     print_28_7_end:
;    [29:7] num=num-1 
;    [29:11] num-1 
;    [29:11] num=num
;    [29:15] num-1 
     sub dword[num],1
   jmp loop_26_5
   loop_26_5_end:
;  [31:5] exit(0)
;    [2:5] mov(ebx,v)
     mov ebx,0
;    [3:5] mov(eax,1)
     mov eax,1
;    [4:5] int(0x80)
     int 0x80
   exit_31_5_end:

;           max regs in use: 1
;         max frames in use: 3
;          max stack in use: 5

