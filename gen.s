; generated by baz

section .data
align 4
;[1:1] field a="...." 
a db '....'
a.len equ $-a

section .bss
align 4
stk resd 1024
stk.end:

section .text
align 4
bits 64
global _start
_start:
mov rsp,stk.end
mov rbp,rsp
jmp main

main:
;  [25:5] var x=1 
;  x: qword[rbp-8]
;  [25:9] x=1 
;  [25:11] 1 
;  [25:11] x=1 
   mov qword[rbp-8],1
;  [26:5] var y=2 
;  y: qword[rbp-16]
;  [26:9] y=2 
;  [26:11] 2 
;  [26:11] y=2 
   mov qword[rbp-16],2
;  [27:5] var z=3 
;  z: qword[rbp-24]
;  [27:9] z=3 
;  [27:11] 3 
;  [27:11] z=3 
   mov qword[rbp-24],3
;  [28:5] exit(a(b(c(1))))
;  exit(v:reg_rdi) 
;    inline: 28_5
;    alloc rdi
;    alias v -> rdi
;    [28:10] a(b(c(1)))
;    [28:10] rdi=a(b(c(1)))
;    [28:10] a(b(c(1)))
;    a(i):res 
;      inline: 28_10
;      alias res -> rdi
;      alloc r15
;      alias i -> r15
;      [28:12] b(c(1))
;      [28:12] r15=b(c(1))
;      [28:12] b(c(1))
;      b(i):res 
;        inline: 28_12
;        alias res -> r15
;        alloc r14
;        alias i -> r14
;        [28:14] c(1)
;        [28:14] r14=c(1)
;        [28:14] c(1)
;        c(i):res 
;          inline: 28_14
;          alias res -> r14
;          alias i -> 1
;          [18:5] var a=1 
;          a: qword[rbp-32]
;          [18:9] a=1 
;          [18:11] 1 
;          [18:11] a=1 
           mov qword[rbp-32],1
;          [19:5] var b=2 
;          b: qword[rbp-40]
;          [19:9] b=2 
;          [19:11] 2 
;          [19:11] b=2 
           mov qword[rbp-40],2
;          [20:5] var c=a+b 
;          c: qword[rbp-48]
;          [20:9] c=a+b 
;          alloc r13
;          [20:11] a+b 
;          [20:11] r13=a
           mov r13,qword[rbp-32]
;          [20:13] r13+b 
           add r13,qword[rbp-40]
           mov qword[rbp-48],r13
;          free r13
;          [21:5] res=i+c 
;          [21:9] i+c 
;          [21:9] res=i
           mov r14,1
;          [21:11] res+c 
           add r14,qword[rbp-48]
         c_28_14_end:
;        [14:5] res=i+2 
;        [14:9] i+2 
;        [14:9] res=i
         mov r15,r14
;        [14:11] res+2 
         add r15,2
;        free r14
       b_28_12_end:
;      [10:5] res=i+1 
;      [10:9] i+1 
;      [10:9] res=i
       mov rdi,r15
;      [10:11] res+1 
       add rdi,1
;      free r15
     a_28_10_end:
;    [4:5] mov(rax,60)
     mov rax,60
;    [4:17] # exit system call 
;    [5:5] mov(rdi,v)
;    [5:17] # return code 
;    [6:5] syscall 
     syscall
;    free rdi
   exit_28_5_end:

; max scratch registers in use: 3
;            max frames in use: 4

