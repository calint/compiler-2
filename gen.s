; generated by baz

section .data
align 4
;[1:1] field name="............................................................" 
name db '............................................................'
name.len equ $-name

section .bss
align 4
stk resd 256
stk.end:

section .text
align 4
bits 64
global _start
_start:
mov rsp,stk.end
mov rbp,rsp
jmp main

main:
;  [14:5] var a=1 
;  a: qword[rbp-8]
;  [14:9] a=1 
;  [14:11] 1 
;  [14:11] a=1 
   mov qword[rbp-8],1
;  [15:5] var b=-f(-a)
;  b: qword[rbp-16]
;  [15:9] b=-f(-a)
;  alloc r15
;  [15:11] -f(-a)
;  [15:12] r15=-f(-a)
;  [15:12] -f(-a)
;  f(a):res 
;    inline: 15_12
;    alias res -> r15
;    alloc r14
     mov r14,qword[rbp-8]
     neg r14
;    alias a -> r14
;    [10:5] res=-a*2 
;    [10:9] -a*2 
;    [10:10] res=-a
     mov r15,r14
     neg r15
;    [10:12] res*2 
     imul r15,2
;    free r14
   f_15_12_end:
   neg r15
   mov qword[rbp-16],r15
;  free r15
   if_16_7:
;  [16:8] ? b=-2
   cmp_16_8:
   cmp qword[rbp-16],-2
   jne if_16_5_end
   if_16_7_code:  ; opt1
;    [17:9] exit(0)
;    exit(v:reg_rdi) 
;      inline: 17_9
;      alloc rdi
;      alias v -> rdi
       mov rdi,0
;      [4:5] mov(rax,60)
       mov rax,60
;      [4:17] # exit system call 
;      [5:5] mov(rdi,v)
;      [5:17] # return code 
;      [6:5] syscall 
       syscall
;      free rdi
     exit_17_9_end:
   if_16_5_end:
;  [18:5] exit(1)
;  exit(v:reg_rdi) 
;    inline: 18_5
;    alloc rdi
;    alias v -> rdi
     mov rdi,1
;    [4:5] mov(rax,60)
     mov rax,60
;    [4:17] # exit system call 
;    [5:5] mov(rdi,v)
;    [5:17] # return code 
;    [6:5] syscall 
     syscall
;    free rdi
   exit_18_5_end:

; max scratch registers in use: 3
;            max frames in use: 5

