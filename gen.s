; generated by baz

section .data
align 4

section .bss
align 4
stk resd 1024
stk.end:

section .text
align 4
bits 64
global _start
_start:
mov rsp,stk.end
mov rbp,rsp
jmp main

main:
;  [8:5] var a=1 
;  a: qword[rbp-8]
;  [8:9] a=1 
;  [8:11] 1 
;  [8:11] a=1 
   mov qword[rbp-8],1
;  [9:5] var b=2 
;  b: qword[rbp-16]
;  [9:9] b=2 
;  [9:11] 2 
;  [9:11] b=2 
   mov qword[rbp-16],2
;  [10:5] var c=3 
;  c: qword[rbp-24]
;  [10:9] c=3 
;  [10:11] 3 
;  [10:11] c=3 
   mov qword[rbp-24],3
;  [11:5] var d=4 
;  d: qword[rbp-32]
;  [11:9] d=4 
;  [11:11] 4 
;  [11:11] d=4 
   mov qword[rbp-32],4
   if_12_8:
;  [12:8] ? not a 
;  [12:8] ? not a 
   cmp_12_8:
   cmp qword[rbp-8],0
   jne if_12_5_end
   if_12_8_code:  ; opt1
;    [12:14] exit(1)
;    exit(v:reg_rdi) 
;      inline: 12_14
;      alloc rdi
;      alias v -> rdi
       mov rdi,1
;      [2:5] mov(rax,60)
       mov rax,60
;      [2:17] # exit system call 
;      [3:5] mov(rdi,v)
;      [3:17] # return code 
;      [4:5] syscall 
       syscall
;      free rdi
     exit_12_14_end:
   if_12_5_end:
   if_13_8:
;  [13:8] ? not (a and b)
;  [13:13] ? not (a and b)
;  [13:13] ? a and b
;  inverted
;  invert 'or'
;  [13:13] ? a 
   cmp_13_13:
   cmp qword[rbp-8],0
   je if_13_8_code
;  invert 'and'
;  [13:19] ? b
   cmp_13_19:
   cmp qword[rbp-16],0
   jne if_13_5_end
   if_13_8_code:  ; opt1
;    [13:22] exit(2)
;    exit(v:reg_rdi) 
;      inline: 13_22
;      alloc rdi
;      alias v -> rdi
       mov rdi,2
;      [2:5] mov(rax,60)
       mov rax,60
;      [2:17] # exit system call 
;      [3:5] mov(rdi,v)
;      [3:17] # return code 
;      [4:5] syscall 
       syscall
;      free rdi
     exit_13_22_end:
   if_13_5_end:
   if_14_8:
;  [14:8] ? a and b 
;  [14:8] ? a and b 
;  [14:8] ? a 
   cmp_14_8:
   cmp qword[rbp-8],0
   je if_14_5_end
;  [14:14] ? b 
   cmp_14_14:
   cmp qword[rbp-16],0
   je if_14_5_end
   if_14_8_code:  ; opt1
;    [14:16] exit(0)
;    exit(v:reg_rdi) 
;      inline: 14_16
;      alloc rdi
;      alias v -> rdi
       mov rdi,0
;      [2:5] mov(rax,60)
       mov rax,60
;      [2:17] # exit system call 
;      [3:5] mov(rdi,v)
;      [3:17] # return code 
;      [4:5] syscall 
       syscall
;      free rdi
     exit_14_16_end:
   if_14_5_end:
;  [15:5] exit(3)
;  exit(v:reg_rdi) 
;    inline: 15_5
;    alloc rdi
;    alias v -> rdi
     mov rdi,3
;    [2:5] mov(rax,60)
     mov rax,60
;    [2:17] # exit system call 
;    [3:5] mov(rdi,v)
;    [3:17] # return code 
;    [4:5] syscall 
     syscall
;    free rdi
   exit_15_5_end:

; max scratch registers in use: 1
;            max frames in use: 5

