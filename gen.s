; generated by baz

section .data
;[1:1] field prompt=" hello enter name: " 
prompt db '  hello    enter name: '
prompt.len equ $-prompt
;[2:1] field name="............................................................" 
name db '............................................................'
name.len equ $-name
;[3:1] field prompt2=" not a name: " 
prompt2 db '  not a name: '
prompt2.len equ $-prompt2
;[4:1] field len=0 
len dq 0

section .bss
stk resd 256
stk.end:

section .text
align 4
bits 64
global _start
_start:
mov rbp,stk
mov rsp,stk.end
;  [38:5] var a=1 
;  [38:9] a=1 
;  [38:11] 1 
;  [38:11] a=1 
   mov qword[rbp+0],1
;  [39:5] var b=2 
;  [39:9] b=2 
;  [39:11] 2 
;  [39:11] b=2 
   mov qword[rbp+8],2
;  [40:5] var c=3 
;  [40:9] c=3 
;  [40:11] 3 
;  [40:11] c=3 
   mov qword[rbp+16],3
;  [41:5] var d=4 
;  [41:9] d=4 
;  [41:11] 4 
;  [41:11] d=4 
   mov qword[rbp+24],4
;  [42:5] var r=a+b+c+d 
;  [42:9] r=a+b+c+d 
;  [42:11] a+b+c+d 
;  [42:11] r15=a
   mov r15,qword[rbp+0]
;  [42:13] r15+b
   add r15,qword[rbp+8]
;  [42:15] r15+c
   add r15,qword[rbp+16]
;  [42:17] r15+d 
   add r15,qword[rbp+24]
   mov qword[rbp+32],r15
;  [43:5] var x=2 
;  [43:9] x=2 
;  [43:11] 2 
;  [43:11] x=2 
   mov qword[rbp+40],2
;  [44:5] foo(x)
;    [30:5] loop
     loop_30_5_44_5:
       if_31_12_44_5:
;      [31:12] ? i=0 
;      [31:12] ? i=0 
       cmp_31_12_44_5:
       cmp qword[rbp+40],0
       jne if_31_9_44_5_end
       jmp if_31_12_44_5_code
       if_31_12_44_5_code:
;        [31:16] return 
         jmp foo_44_5_end
       if_31_9_44_5_end:
;      [32:9] print(prompt.len,prompt)
;        [7:5] mov(rcx,ptr)
         mov rcx,prompt
;        [8:5] mov(rdx,len)
         mov rdx,prompt.len
;        [9:5] mov(rbx,1)
         mov rbx,1
;        [10:5] mov(rax,4)
         mov rax,4
;        [11:5] int(0x80)
         int 0x80
       print_44_5_32_9_end:
;      [33:9] i=i-1 
;      [33:11] i-1 
;      [33:11] i=i
;      [33:13] i-1 
       sub qword[rbp+40],1
     jmp loop_30_5_44_5
     loop_30_5_44_5_end:
   foo_44_5_end:
;  [45:5] x=1 
;  [45:7] 1 
;  [45:7] x=1 
   mov qword[rbp+40],1
;  [46:5] foo(x)
;    [30:5] loop
     loop_30_5_46_5:
       if_31_12_46_5:
;      [31:12] ? i=0 
;      [31:12] ? i=0 
       cmp_31_12_46_5:
       cmp qword[rbp+40],0
       jne if_31_9_46_5_end
       jmp if_31_12_46_5_code
       if_31_12_46_5_code:
;        [31:16] return 
         jmp foo_46_5_end
       if_31_9_46_5_end:
;      [32:9] print(prompt.len,prompt)
;        [7:5] mov(rcx,ptr)
         mov rcx,prompt
;        [8:5] mov(rdx,len)
         mov rdx,prompt.len
;        [9:5] mov(rbx,1)
         mov rbx,1
;        [10:5] mov(rax,4)
         mov rax,4
;        [11:5] int(0x80)
         int 0x80
       print_46_5_32_9_end:
;      [33:9] i=i-1 
;      [33:11] i-1 
;      [33:11] i=i
;      [33:13] i-1 
       sub qword[rbp+40],1
     jmp loop_30_5_46_5
     loop_30_5_46_5_end:
   foo_46_5_end:
;  [47:5] exit(0)
;    [24:5] mov(rbx,v)
     mov rbx,0
;    [25:5] mov(rax,1)
     mov rax,1
;    [26:5] int(0x80)
     int 0x80
   exit_47_5_end:

;           max regs in use: 1
;         max frames in use: 4
;          max stack in use: 6
