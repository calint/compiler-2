; generated by baz

section .data
align 4
;[1:1] field len=2 
len dq 2

section .bss
align 4
stk resd 256
stk.end:

section .text
align 4
bits 64
global _start
_start:
mov rsp,stk.end
mov rbp,rsp
jmp main

main:
;  [10:5] var a=-1 
;  a: qword[rbp-8]
;  [10:9] a=-1 
;  [10:11] -1 
;  [10:12] a=-1 
   mov qword[rbp-8],-1
;  [11:5] a=-a 
;  [11:7] -a 
;  [11:8] a=-a 
   neg qword[rbp-8]
;  [12:5] var b=-(len)
;  b: qword[rbp-16]
;  [12:9] b=-(len)
;  alloc r15
;  [12:11] -(len)
;  [12:13] r15=(len)
   mov r15,qword[len]
   neg r15
   mov qword[rbp-16],r15
;  free r15
;  [13:5] b=-b 
;  [13:7] -b 
;  [13:8] b=-b 
   neg qword[rbp-16]
   if_14_8:
;  [14:8] ? a=1 and b=2 
;  [14:8] ? a=1 
   cmp_14_8:
   cmp qword[rbp-8],1
   jne if_14_5_end
;  [14:16] ? b=2 
   cmp_14_16:
   cmp qword[rbp-16],2
   jne if_14_5_end
   if_14_8_code:  ; opt1
;    [15:9] exit(0)
;    exit(v) 
;      inline: 15_9
;      alias v -> 0
;      [4:5] mov(rbx,v)
       mov rbx,0
;      [5:5] mov(rax,1)
       mov rax,1
;      [6:5] int(0x80)
       int 0x80
     exit_15_9_end:
   if_14_5_end:
;  [16:5] exit(1)
;  exit(v) 
;    inline: 16_5
;    alias v -> 1
;    [4:5] mov(rbx,v)
     mov rbx,1
;    [5:5] mov(rax,1)
     mov rax,1
;    [6:5] int(0x80)
     int 0x80
   exit_16_5_end:

; max scratch registers in use: 1
;            max frames in use: 5

