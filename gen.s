; generated by baz

section .data
align 4

section .bss
align 4
stk resd 1024
stk.end:

section .text
align 4
bits 64
global _start
_start:
mov rsp,stk.end
mov rbp,rsp
jmp main

main:
;  [8:5] var a=4 
;  a: qword[rbp-8]
;  [8:9] a=4 
;  [8:11] 4 
;  [8:11] a=4 
   mov qword[rbp-8],4
;  [9:5] var b=2 
;  b: qword[rbp-16]
;  [9:9] b=2 
;  [9:11] 2 
;  [9:11] b=2 
   mov qword[rbp-16],2
;  [10:5] var c=0 
;  c: qword[rbp-24]
;  [10:9] c=0 
;  [10:11] 0 
;  [10:11] c=0 
   mov qword[rbp-24],0
;  [12:5] c=-a/-(-(b+1)+1)
;  [12:7] -a/-(-(b+1)+1)
;  [12:8] c=-a
;  alloc r15
   mov r15,qword[rbp-8]
   mov qword[rbp-24],r15
;  free r15
   neg qword[rbp-24]
;  [12:12] c/-(-(b+1)+1)
;  alloc r15
;  [12:12] -(-(b+1)+1)
;  [12:14] r15=-(b+1)
;  [12:14] -(b+1)
;  [12:15] r15=b+1
;  [12:15] b+1
;  [12:14] r15=b
   mov r15,qword[rbp-16]
;  [12:16] r15+1
   add r15,1
   neg r15
;  [12:19] r15+1
   add r15,1
   neg r15
;  alloc rax
   mov rax,qword[rbp-24]
;  alloc rdx
   cqo
   idiv r15
   mov qword[rbp-24],rax
;  free rdx
;  free rax
;  free r15
   if_13_8:
;  [13:8] ? not c=-2 
   cmp_13_8:
   cmp qword[rbp-24],-2
   je if_13_5_end
   if_13_8_code:  ; opt1
;    [13:17] exit(1)
;    exit(v:reg_rdi) 
;      inline: 13_17
;      alloc rdi
;      alias v -> rdi
       mov rdi,1
;      [2:5] mov(rax,60)
       mov rax,60
;      [2:17] # exit system call 
;      [3:5] mov(rdi,v)
;      [3:17] # return code 
;      [4:5] syscall 
       syscall
;      free rdi
     exit_13_17_end:
   if_13_5_end:
;  [15:5] c=-a/-b 
;  [15:7] -a/-b 
;  [15:8] c=-a
;  alloc r15
   mov r15,qword[rbp-8]
   mov qword[rbp-24],r15
;  free r15
   neg qword[rbp-24]
;  [15:11] c/-b 
;  alloc r15
   mov r15,qword[rbp-16]
   neg r15
;  alloc rax
   mov rax,qword[rbp-24]
;  alloc rdx
   cqo
   idiv r15
   mov qword[rbp-24],rax
;  free rdx
;  free rax
;  free r15
   if_16_8:
;  [16:8] ? not c=2 
   cmp_16_8:
   cmp qword[rbp-24],2
   je if_16_5_end
   if_16_8_code:  ; opt1
;    [16:16] exit(2)
;    exit(v:reg_rdi) 
;      inline: 16_16
;      alloc rdi
;      alias v -> rdi
       mov rdi,2
;      [2:5] mov(rax,60)
       mov rax,60
;      [2:17] # exit system call 
;      [3:5] mov(rdi,v)
;      [3:17] # return code 
;      [4:5] syscall 
       syscall
;      free rdi
     exit_16_16_end:
   if_16_5_end:
;  [18:5] c=a/-(-b+1)
;  [18:7] a/-(-b+1)
;  [18:7] c=a
;  alloc r15
   mov r15,qword[rbp-8]
   mov qword[rbp-24],r15
;  free r15
;  [18:11] c/-(-b+1)
;  alloc r15
;  [18:11] -(-b+1)
;  [18:12] r15=-b
   mov r15,qword[rbp-16]
   neg r15
;  [18:14] r15+1
   add r15,1
   neg r15
;  alloc rax
   mov rax,qword[rbp-24]
;  alloc rdx
   cqo
   idiv r15
   mov qword[rbp-24],rax
;  free rdx
;  free rax
;  free r15
   if_19_8:
;  [19:8] ? not c=4 
   cmp_19_8:
   cmp qword[rbp-24],4
   je if_19_5_end
   if_19_8_code:  ; opt1
;    [19:16] exit(3)
;    exit(v:reg_rdi) 
;      inline: 19_16
;      alloc rdi
;      alias v -> rdi
       mov rdi,3
;      [2:5] mov(rax,60)
       mov rax,60
;      [2:17] # exit system call 
;      [3:5] mov(rdi,v)
;      [3:17] # return code 
;      [4:5] syscall 
       syscall
;      free rdi
     exit_19_16_end:
   if_19_5_end:
;  [21:5] c=a/-(b+1)
;  [21:7] a/-(b+1)
;  [21:7] c=a
;  alloc r15
   mov r15,qword[rbp-8]
   mov qword[rbp-24],r15
;  free r15
;  [21:11] c/-(b+1)
;  alloc r15
;  [21:11] -(b+1)
;  [21:11] r15=b
   mov r15,qword[rbp-16]
;  [21:13] r15+1
   add r15,1
   neg r15
;  alloc rax
   mov rax,qword[rbp-24]
;  alloc rdx
   cqo
   idiv r15
   mov qword[rbp-24],rax
;  free rdx
;  free rax
;  free r15
   if_22_8:
;  [22:8] ? not c=-1 
   cmp_22_8:
   cmp qword[rbp-24],-1
   je if_22_5_end
   if_22_8_code:  ; opt1
;    [22:17] exit(4)
;    exit(v:reg_rdi) 
;      inline: 22_17
;      alloc rdi
;      alias v -> rdi
       mov rdi,4
;      [2:5] mov(rax,60)
       mov rax,60
;      [2:17] # exit system call 
;      [3:5] mov(rdi,v)
;      [3:17] # return code 
;      [4:5] syscall 
       syscall
;      free rdi
     exit_22_17_end:
   if_22_5_end:
;  [24:5] c=a/b 
;  [24:7] a/b 
;  [24:7] c=a
;  alloc r15
   mov r15,qword[rbp-8]
   mov qword[rbp-24],r15
;  free r15
;  [24:9] c/b 
;  alloc rax
   mov rax,qword[rbp-24]
;  alloc rdx
   cqo
   idiv qword[rbp-16]
   mov qword[rbp-24],rax
;  free rdx
;  free rax
   if_25_8:
;  [25:8] ? not c=2 
   cmp_25_8:
   cmp qword[rbp-24],2
   je if_25_5_end
   if_25_8_code:  ; opt1
;    [25:16] exit(5)
;    exit(v:reg_rdi) 
;      inline: 25_16
;      alloc rdi
;      alias v -> rdi
       mov rdi,5
;      [2:5] mov(rax,60)
       mov rax,60
;      [2:17] # exit system call 
;      [3:5] mov(rdi,v)
;      [3:17] # return code 
;      [4:5] syscall 
       syscall
;      free rdi
     exit_25_16_end:
   if_25_5_end:
;  [27:5] a=3 
;  [27:7] 3 
;  [27:7] a=3 
   mov qword[rbp-8],3
   if_28_8:
;  [28:8] ? not a%2=1 
   cmp_28_8:
;  alloc r15
;    [28:12] a%2
;    [28:12] r15=a
     mov r15,qword[rbp-8]
;    [28:14] r15%2
;    alloc rax
     mov rax,r15
;    alloc rdx
     cqo
;    alloc r14
     mov r14,2
     idiv r14
;    free r14
     mov r15,rdx
;    free rdx
;    free rax
   cmp r15,1
;  free r15
   je if_28_5_end
   if_28_8_code:  ; opt1
;    [28:18] exit(6)
;    exit(v:reg_rdi) 
;      inline: 28_18
;      alloc rdi
;      alias v -> rdi
       mov rdi,6
;      [2:5] mov(rax,60)
       mov rax,60
;      [2:17] # exit system call 
;      [3:5] mov(rdi,v)
;      [3:17] # return code 
;      [4:5] syscall 
       syscall
;      free rdi
     exit_28_18_end:
   if_28_5_end:
;  [30:5] c=1+3%2+1 
;  [30:7] 1+3%2+1 
;  [30:7] c=1
   mov qword[rbp-24],1
;  [30:10] c+3%2+1 
;  alloc r15
;  [30:10] 3%2+1 
;  [30:9] r15=3
   mov r15,3
;  [30:11] r15%2
;  alloc rax
   mov rax,r15
;  alloc rdx
   cqo
;  alloc r14
   mov r14,2
   idiv r14
;  free r14
   mov r15,rdx
;  free rdx
;  free rax
;  [30:13] r15+1 
   add r15,1
   add qword[rbp-24],r15
;  free r15
   if_31_8:
;  [31:8] ? not c=3 
   cmp_31_8:
   cmp qword[rbp-24],3
   je if_31_5_end
   if_31_8_code:  ; opt1
;    [31:16] exit(7)
;    exit(v:reg_rdi) 
;      inline: 31_16
;      alloc rdi
;      alias v -> rdi
       mov rdi,7
;      [2:5] mov(rax,60)
       mov rax,60
;      [2:17] # exit system call 
;      [3:5] mov(rdi,v)
;      [3:17] # return code 
;      [4:5] syscall 
       syscall
;      free rdi
     exit_31_16_end:
   if_31_5_end:
;  [33:5] c=-a/b 
;  [33:7] -a/b 
;  [33:8] c=-a
;  alloc r15
   mov r15,qword[rbp-8]
   mov qword[rbp-24],r15
;  free r15
   neg qword[rbp-24]
;  [33:10] c/b 
;  alloc rax
   mov rax,qword[rbp-24]
;  alloc rdx
   cqo
   idiv qword[rbp-16]
   mov qword[rbp-24],rax
;  free rdx
;  free rax
   if_34_8:
;  [34:8] ? not c=-1 
   cmp_34_8:
   cmp qword[rbp-24],-1
   je if_34_5_end
   if_34_8_code:  ; opt1
;    [34:17] exit(8)
;    exit(v:reg_rdi) 
;      inline: 34_17
;      alloc rdi
;      alias v -> rdi
       mov rdi,8
;      [2:5] mov(rax,60)
       mov rax,60
;      [2:17] # exit system call 
;      [3:5] mov(rdi,v)
;      [3:17] # return code 
;      [4:5] syscall 
       syscall
;      free rdi
     exit_34_17_end:
   if_34_5_end:
;  [36:5] c=a/b 
;  [36:7] a/b 
;  [36:7] c=a
;  alloc r15
   mov r15,qword[rbp-8]
   mov qword[rbp-24],r15
;  free r15
;  [36:9] c/b 
;  alloc rax
   mov rax,qword[rbp-24]
;  alloc rdx
   cqo
   idiv qword[rbp-16]
   mov qword[rbp-24],rax
;  free rdx
;  free rax
   if_37_8:
;  [37:8] ? not c=1 
   cmp_37_8:
   cmp qword[rbp-24],1
   je if_37_5_end
   if_37_8_code:  ; opt1
;    [37:16] exit(9)
;    exit(v:reg_rdi) 
;      inline: 37_16
;      alloc rdi
;      alias v -> rdi
       mov rdi,9
;      [2:5] mov(rax,60)
       mov rax,60
;      [2:17] # exit system call 
;      [3:5] mov(rdi,v)
;      [3:17] # return code 
;      [4:5] syscall 
       syscall
;      free rdi
     exit_37_16_end:
   if_37_5_end:
;  [39:5] c=a/-b 
;  [39:7] a/-b 
;  [39:7] c=a
;  alloc r15
   mov r15,qword[rbp-8]
   mov qword[rbp-24],r15
;  free r15
;  [39:10] c/-b 
;  alloc r15
   mov r15,qword[rbp-16]
   neg r15
;  alloc rax
   mov rax,qword[rbp-24]
;  alloc rdx
   cqo
   idiv r15
   mov qword[rbp-24],rax
;  free rdx
;  free rax
;  free r15
   if_40_8:
;  [40:8] ? not c=-1 
   cmp_40_8:
   cmp qword[rbp-24],-1
   je if_40_5_end
   if_40_8_code:  ; opt1
;    [40:17] exit(10)
;    exit(v:reg_rdi) 
;      inline: 40_17
;      alloc rdi
;      alias v -> rdi
       mov rdi,10
;      [2:5] mov(rax,60)
       mov rax,60
;      [2:17] # exit system call 
;      [3:5] mov(rdi,v)
;      [3:17] # return code 
;      [4:5] syscall 
       syscall
;      free rdi
     exit_40_17_end:
   if_40_5_end:
;  [42:5] c=a/-(b+1)
;  [42:7] a/-(b+1)
;  [42:7] c=a
;  alloc r15
   mov r15,qword[rbp-8]
   mov qword[rbp-24],r15
;  free r15
;  [42:11] c/-(b+1)
;  alloc r15
;  [42:11] -(b+1)
;  [42:11] r15=b
   mov r15,qword[rbp-16]
;  [42:13] r15+1
   add r15,1
   neg r15
;  alloc rax
   mov rax,qword[rbp-24]
;  alloc rdx
   cqo
   idiv r15
   mov qword[rbp-24],rax
;  free rdx
;  free rax
;  free r15
   if_43_8:
;  [43:8] ? not c=-1 
   cmp_43_8:
   cmp qword[rbp-24],-1
   je if_43_5_end
   if_43_8_code:  ; opt1
;    [43:17] exit(11)
;    exit(v:reg_rdi) 
;      inline: 43_17
;      alloc rdi
;      alias v -> rdi
       mov rdi,11
;      [2:5] mov(rax,60)
       mov rax,60
;      [2:17] # exit system call 
;      [3:5] mov(rdi,v)
;      [3:17] # return code 
;      [4:5] syscall 
       syscall
;      free rdi
     exit_43_17_end:
   if_43_5_end:
;  [45:5] exit(0)
;  exit(v:reg_rdi) 
;    inline: 45_5
;    alloc rdi
;    alias v -> rdi
     mov rdi,0
;    [2:5] mov(rax,60)
     mov rax,60
;    [2:17] # exit system call 
;    [3:5] mov(rdi,v)
;    [3:17] # return code 
;    [4:5] syscall 
     syscall
;    free rdi
   exit_45_5_end:

; max scratch registers in use: 3
;            max frames in use: 5

