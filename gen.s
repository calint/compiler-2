; generated by baz

section .data
;[1:1] field prompt=" hello enter name: " 
prompt db '  hello    enter name: '
prompt.len equ $-prompt
;[2:1] field name="............................................................" 
name db '............................................................'
name.len equ $-name
;[3:1] field prompt2=" not a name: " 
prompt2 db '  not a name: '
prompt2.len equ $-prompt2
;[4:1] field len=0 
len dq 0
;[5:1] field hello="hello\n" 
hello db 'hello',10,''
hello.len equ $-hello

section .bss
stk resd 256
stk.end:

section .text
align 4
bits 64
global _start
_start:
mov rsp,stk.end
jmp main

print:
;  len rsp+8
;  ptr rsp+16
;  [8:5] mov(rcx,ptr)
   mov rcx,qword[rsp+16]
;  [9:5] mov(rdx,len)
   mov rdx,qword[rsp+8]
;  [10:5] mov(rbx,1)
   mov rbx,1
;  [11:5] mov(rax,4)
   mov rax,4
;  [12:5] int(0x80)
   int 0x80
   ret

main:
;  [22:5] var a=1 
;  [22:9] a=1 
;  [22:11] 1 
;  [22:11] a=1 
   mov qword[rsp-8],1
;  [23:5] print(hello.len,hello)
   mov r15,rsp
   sub rsp,8
   push r15
   push hello
   push hello.len
   call print
   add rsp,16
   pop rsp
;  [24:5] exit(0)
;    inline: 24_5
;    [16:5] mov(rbx,v)
     mov rbx,0
;    [17:5] mov(rax,1)
     mov rax,1
;    [18:5] int(0x80)
     int 0x80
   exit_24_5_end:

;      max registers in use: 1
;         max frames in use: 2
;          max stack in use: 0
