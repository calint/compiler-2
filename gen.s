; generated by baz

true equ 1
false equ 0

section .data
align 4

section .bss
align 4
stk resd 1024
stk.end:

section .text
align 4
bits 64
global _start
_start:
mov rsp,stk.end
mov rbp,rsp
jmp main

main:
;  b1: byte[rbp-1]
;  [8:5] var b1:bool=true 
;  [8:9] b1:bool=true 
;  [8:17] true 
   mov byte[rbp-1],true
;  b2: byte[rbp-2]
;  [9:5] var b2:bool=true 
;  [9:9] b2:bool=true 
;  [9:17] true 
   mov byte[rbp-2],true
;  b3: byte[rbp-3]
;  [10:5] var b3:bool=false 
;  [10:9] b3:bool=false 
;  [10:17] false 
   mov byte[rbp-3],false
   if_12_8:
;  [12:8] ? b1!=b2 
;  [12:8] ? b1!=b2 
   cmp_12_8:
;  alloc r15
   mov r15b,byte[rbp-2]
   cmp byte[rbp-1],r15b
;  free r15
   je if_12_5_end
   if_12_8_code:  ; opt1
;    [12:15] exit(1)
;    exit(v:reg_rdi) 
;      inline: 12_15
;      alloc rdi
;      alias v -> rdi
       mov rdi,1
;      [2:5] mov(rax,60)
       mov rax,60
;      [2:17] # exit system call 
;      [3:5] mov(rdi,v)
;      [3:17] # return code 
;      [4:5] syscall 
       syscall
;      free rdi
     exit_12_15_end:
   if_12_5_end:
   if_14_8:
;  [14:8] ? not b1!=b3 
;  [14:8] ? not b1!=b3 
   cmp_14_8:
;  alloc r15
   mov r15b,byte[rbp-3]
   cmp byte[rbp-1],r15b
;  free r15
   jne if_14_5_end
   if_14_8_code:  ; opt1
;    [14:19] exit(2)
;    exit(v:reg_rdi) 
;      inline: 14_19
;      alloc rdi
;      alias v -> rdi
       mov rdi,2
;      [2:5] mov(rax,60)
       mov rax,60
;      [2:17] # exit system call 
;      [3:5] mov(rdi,v)
;      [3:17] # return code 
;      [4:5] syscall 
       syscall
;      free rdi
     exit_14_19_end:
   if_14_5_end:
;  [16:5] exit(0)
;  exit(v:reg_rdi) 
;    inline: 16_5
;    alloc rdi
;    alias v -> rdi
     mov rdi,0
;    [2:5] mov(rax,60)
     mov rax,60
;    [2:17] # exit system call 
;    [3:5] mov(rdi,v)
;    [3:17] # return code 
;    [4:5] syscall 
     syscall
;    free rdi
   exit_16_5_end:

; max scratch registers in use: 1
;            max frames in use: 5
