func exit(v : reg_rdi) {
    mov(rax, 60)  # exit system call
    mov(rdi, v)   # return code
    syscall()
}

func assert(expr : bool) {
    if not expr exit(1)
}

type point {x, y}

# size 85
type link {
    pos : point,
    name : i8[64],
    name_len : i8,
    loc : i32
}

# size 744
type location {
    name : i8[64],
    links : link[8]
}

# size: 4320
type world {
    time : i64,
    locations : location[7]
}

func foo(lnk : link){
    lnk.loc = 2
    lnk.name_len = 1
    lnk.name[0] = 0x61 # 'a'
}

func bar(locs : location[]) {
    locs[1].links[2].pos.y = 33
    foo(locs[2].links[1])
    foo(locs[3].links[5])
}

func baz(wld : world[]) {
    bar(wld[1].locations)
}

func fuz(name: i8[]) {

}

func main() {
    var worlds : world[2]
    baz(worlds)
    assert(worlds[1].locations[2].links[1].loc == 2)
    assert(worlds[1].locations[2].links[1].name_len == 1)
    assert(worlds[1].locations[2].links[1].name[0] == 0x61)
    assert(worlds[1].locations[3].links[5].loc == 2)
    assert(worlds[1].locations[3].links[5].name_len == 1)
    assert(worlds[1].locations[3].links[5].name[0] == 0x61)
    assert(worlds[1].locations[1].links[2].pos.y == 33)
}

