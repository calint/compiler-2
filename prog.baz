func inline exit(v:reg_rdi){
    mov(rax,60) # exit system call
    mov(rdi,v)  # return code
    syscall
}

func f1(i):res{
    res=-i
}

func f2(i):res:qword{
    res=-i*2
}

func f3(i:dword):res:dword{
    res=-i*3
}

func f4(i:word):res:word{
    res=-i*4
}

func f5(i:byte):res:byte{
    res=-i*4
}

func inline f6(i:byte):res:qword{
    res=-i
}

func inline main{
    var q=f1(1)
    if not q=-1 exit(1)
    
    var bt:byte=1
    var wd:word=2
    var dd:dword=3
    var qd:qword=4
    
    var b:byte=f5(bt)
    if not b=-4 exit(2)

    var w:word=f4(wd)
    if not w=-8 exit(3)

    var d:dword=f3(dd)
    if not d=-9 exit(4)

    q=f2(qd)
    if not q=-8 exit(5)

    q=f6(b)
    if not q=4 exit(8)
    
    exit(0)
}
