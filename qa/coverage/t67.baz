func inline exit(v : reg_rdi) {
    mov(rax, 60)  # exit system call
    mov(rdi, v)   # return code
    syscall
}

func assert(expr : bool) {
    if not expr exit(1)
}

type position {x, y, z}

type object { pos : position, valid : bool }

type square { super : object, color}

func inline main {
    var p1 : position = {10, 20, 30}
    var o1 : object = {p1, true}
    var sq1 : square = {o1, 0xff0000}
    var sq2 : square = sq1
    assert(sq2.super.pos.x == 10)
    assert(sq2.super.pos.y == 20)
    assert(sq2.super.pos.z == 30)
    assert(sq2.super.valid)
    assert(sq2.color == 0xff0000)

    var p2 : position = {-1, -2, -3}
    var o2 : object = {p2, false}
    sq2.super = o2
    assert(sq2.super.pos.x == -1)
    assert(sq2.super.pos.y == -2)
    assert(sq2.super.pos.z == -3)
    assert(not sq2.super.valid)
    assert(sq2.color == 0xff0000)
}
