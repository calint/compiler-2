func exit(v : reg_rdi) {
    mov(rax, 60)  # exit system call
    mov(rdi, v)   # return code
    syscall()
}

func assert(expr : bool) if not expr exit(1)

# Break/continue in nested loops, multiple breaks
func main() {
    var outer_count = 0
    var i = 0
    loop {
        var j = 0
        loop {
            if j == 3 break
            outer_count = outer_count + 1
            j = j + 1
        }
        i = i + 1
        if i == 2 break
    }
    assert(outer_count == 6)  # 2 * 3
    
    # Continue in nested context
    var sum = 0
    var k = 0
    loop {
        k = k + 1
        if k == 3 continue
        sum = sum + k
        if k == 5 break
    }
    assert(sum == 1 + 2 + 4 + 5)
}
