func exit(v : reg_rdi) {
    mov(rax, 60)  # exit system call
    mov(rdi, v)   # return code
    syscall()
}

func assert(expr : bool) {
    if not expr exit(1)
}

type point {x, y}

type link {
    pos : point,
    name : i8[64],
    name_len : i8,
    loc : i32
}

type location {
    name : i8[64],
    links : link[8]
}

type world {
    time : i64,
    locations : location[7]
}

func fuz(lnks: link[]) {
    lnks[1].loc = 0xba
    lnks[1].pos.y = 0xab
    array_copy(lnks[1], lnks[4], 1)
}

func main() {
    var worlds : world[2]
    fuz(worlds[1].locations[2].links)
    assert(worlds[1].locations[2].links[4].loc == 0xba)
    assert(worlds[1].locations[2].links[4].pos.y == 0xab)
}

