func inline exit(v : reg_rdi) {
    mov(rax, 60)  # exit system call
    mov(rdi, v)   # return code
    syscall()
}

func assert(expr : bool) {
    if not expr exit(1)
}

func inline main(){
    var x = 1
    var y = 3
    var z = 4
    var a : bool = not ((x == 1 and y == 3) and not (x == 1 and y == 3 and z == 4))
    var b : bool = not ((x == 1 and y == 4) or not (x == 3 or y == 4 or z == 5))
    var c : bool = not ((true and true) and (true and true))
    var d : bool = not ((true and true) or (true and true))
    var e : bool = not ((false and true) and (false and true))
    var f : bool = not ((true and true) and (x == 1 and y == 3))
    var g : bool = not ((true or true) and (x == 1 or y == 3))
    var h : bool = ((true or true) and (x == 1 or y == 3))
    var i : bool = ((false and true) and (x == 1 or y == 3))
    var j : bool = (false or false and true) or true
    var k : bool = (true and false) or (true or false) or (true and false)
    var l : bool = (true)
    var m : bool = not true == true or not false == false
    var n : bool = not true == false or not false == false
    var o : bool = true

    assert(a)
    assert(not b)
    assert(not c)
    assert(not d)
    assert(e)
    assert(not f)
    assert(not g)
    assert(h)
    assert(not i)
    assert(j)
    assert(k)
    assert(l)
    assert(not m)
    assert(n)
    assert(o)
}
