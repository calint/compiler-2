func exit(v : reg_rdi) {
    mov(rax, 60)  # exit system call
    mov(rdi, v)   # return code
    syscall()
}

func assert(expr : bool) {
    if not expr exit(1)
}

func main(){
    var x = 1
    var y = 3
    var z = 4
    var a : bool = not ((x == 1 and y == 3) and not (x == 1 and y == 3 and z == 4))
    var b : bool = not ((x == 1 and y == 4) or not (x == 3 or y == 4 or z == 5))
    var c : bool = not ((true and true) and (true and true))
    var d : bool = not ((true and true) or (true and true))
    var e : bool = not ((false and true) and (false and true))
    var f : bool = not ((true and true) and (x == 1 and y == 3))
    var g : bool = not ((true or true) and (x == 1 or y == 3))
    var h : bool = ((true or true) and (x == 1 or y == 3))
    var i : bool = ((false and true) and (x == 1 or y == 3))
    var j : bool = (false or (false and true)) or true
    var k : bool = (true and false) or (true or false) or (true and false)
    var l : bool = (true)
    var m : bool = not true == true or not false == false
    var n : bool = not true == false or not false == false
    var o : bool = true
    var p : bool = ((x < y and y <= z) or (z > x and not (y == x))) and (x != z or y == 3)
    var q : bool = not (not (x == 1) or not (y != 3)) and not (z > 5 and x < 0)
    var r : bool = not ((x == 1 and y == 3 and z == 4) or (x != 1 or y != 3 or z != 4))
    var s : bool = (x < 0) or ((y == 3) and (z > 1)) or ((x != 1) and (y < z))
    var t : bool = not ((x == 1) and not (y != 3)) or (z == 4)
    var u : bool = not ((false or true) and not (true and false)) or (x > 10)
    var v : bool = (not (x != 1) or not (y < 0)) and (z == 4)
    var w : bool = (x + y <= z) and (not (z == 4) or (x == 1 and y == 3))
    var pp : bool = not (x == 1 or (y != 3 and z == 4)) or (x > 5 and y < 0)
    var rr : bool = (x + y <= z)  and (not (z == 4) or (x == 1 and y == 3))

    assert(a)
    assert(not b)
    assert(not c)
    assert(not d)
    assert(e)
    assert(not f)
    assert(not g)
    assert(h)
    assert(not i)
    assert(j)
    assert(k)
    assert(l)
    assert(not m)
    assert(n)
    assert(o)
    assert(p)
    assert(not q)
    assert(not r)
    assert(s)
    assert(t)
    assert(not u)
    assert(v)
    assert(w)
    assert(not pp)
    assert(rr)

    var t1 = 5
    var t2 = 5
    var t3 = 10
    var t4 = 2
    var t5 : bool = false

    var aa : bool = ((t1 == t2 and t3 > t1 * t4) or t5) and not (t1 != t2 or t3 < 10)
    var bb : bool = not (t5 or (t1 + t2 > t3) or (t3 / t4 == t1)) and t1 == 5
    var cc : bool = not (t1 < t2 and t3 > t4 and t5) or (x == 1 and not (y == z))
    var dd : bool = ((t1 == t2) and (t3 == t1 * t4)) or (t1 != 5 and t2 != 5)
    var ee : bool = not ((t1 > 0 and t2 < 10) and not (t3 == 10)) and (t4 == 2 or t5)
    var ff : bool = not (t5) and ((t1 == t2 or t3 != t4) and not (t4 > t3 / 2))
    var gg : bool = (t1 == 5 and (t2 != t3 and t4 < t3)) or (t3 < t1 + t2 and t5)
    var hh : bool = ((t1 == t2 and t3 == t3) and (t4 != t1 and t5 == false)) or (t1 + 1 == 6)
    var ii : bool = not (t1 == 5 and t2 == 5 and t3 == 10 and t4 == 2 and t5 == false)
    var jj : bool = ((t1 + t2 == t3) or (t3 / t4 == t1)) and not (t1 < t5 or t2 < t5)
    var kk : bool = not (t1 == t2 and t3 / t4 == t1)

    assert(not aa)
    assert(not bb)
    assert(cc)
    assert(dd)
    assert(ee)
    assert(ff)
    assert(gg)
    assert(hh)
    assert(not ii)
    assert(jj)   
    assert(not kk)
    
    var h1 : bool = not (not (t1 * 2 == t3) or (z * 2 > t3 + t4)) and (x < t4 and y > t1)
    var h2 : bool = ( (t1 == 5 and t2 != 6) or (t3 > 100) ) and not (z - y == x or t5)
    var h3 : bool = not (x < y and y < z and z > 0) or ( (t1 == t2) and (t3 == 10) and not (t4 * t1 > 10) )
    var h4 : bool = ( (t1 + t2 + t4) and (t3 + 2) and (x == 1) ) and not (t5 or (y > t1) or (t4 < 2))
    var h5 : bool = not ( (x == z - y) and (t3 / t4 == t1) ) or (t1 + t2 > t3 and t3 - t1 == t2)
    var h6 : bool = not (t5 == true and x == 1) or ( (t1 * t4 <= t3 and t3 == 10) or not (z * x != 4 or y == 3) )
    var h7 : bool = ( (t1 == t2 or t3 == t4) and not (z > x and y < z) ) and ( (t5 or x != 1) or (t1 + t4 == 7) )
    var h8 : bool = not (t3 / t4 == t1) and ( (t1 == t2 and z != 4) or not (x == 1 and y == 3 and z == 4) )
    #var h9 : bool = not ( (t1 + t2 + t3 + t4) > 20 and not t5 ) and (t3 / 5 > 1 or t4 / 1 == 2)
    var h9 : bool = not ( t1 + t2 + t3 + t4 > 20 and not t5 ) and (t3 / 5 > 1 or t4 / 1 == 2)
    var h10 : bool = ( (t1 * t4 > t3 and t3 / t4 == t1) or (t1 == t2 and t3 == 10) ) and not (t5 and t4 == 2)

    assert(not h1)
    assert(not h2)
    assert(h3)
    assert(h4)
    assert(not h5)
    assert(h6)
    assert(not h7)
    assert(not h8)
    assert(not h9)
    assert(h10)
}
