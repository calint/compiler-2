func exit(v : reg_rdi) {
    mov(rax, 60)  # exit system call
    mov(rdi, v)   # return code
    syscall()
}

func assert(expr : bool) {
    if not expr exit(1)
}

type point {x, y}

# size 85
type link {
    pos : point,
    name : i8[64],
    name_len : i8,
    loc : i32
}

# size 744
type location {
    name : i8[64],
    links : link[8]
}

# size: 4320
type world {
    time : i64,
    locations : location[7]
}

func fuz(wld1 : world, wld2 : world) {
    wld1.locations[2].links[1].loc = 0xba
    wld1.locations[2].links[1].pos.y = 0xab
    array_copy(
      wld1.locations[2].links,
      wld2.locations[0].links,
      array_size_of(wld1.locations.links)
    )
}

func main() {
    var worlds : world[2]
    fuz(worlds[0], worlds[1])

    var ok : bool = arrays_equal(
      worlds[0].locations[2].links,
      worlds[1].locations[0].links,
      array_size_of(worlds[0].locations[2].links)
    )
    assert(ok)
}

